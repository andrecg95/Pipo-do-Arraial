[tool.poetry]
name = "pipo"
version = "0.0.1"
description = "Bot to play music in a discord channel based on user input"

license = "MIT"

authors = [
    "André Gonçalves <andrecg95@gmail.com>",
    "Tiago Gonçalves <tiago14_ribeiro@hotmail.com>",
]

readme = 'README.md'

keywords = ['python', 'discord', 'music', 'bot']

classifiers = [
    'Programming Language :: Python :: 3.9',
    'Operating System :: OS Independent',
    'Natural Language :: English',
    'Topic :: Multimedia :: Sound/Audio',
    'Topic :: Multimedia :: Sound/Audio :: Players',
]

[tool.poetry.dependencies]
python = "^3.9"  # compatible python versions must be declared here
psutil = "~5.9.0"
discord-py = { version = "~2.0.0", extras = ["voice"] }
pytube = "~12.1.0"
dynaconf = { version = "~3.1.0", extras = ["yaml"] }

[tool.poetry.dev-dependencies]
pytest = "^7.1"
mock = "~4.0.0"
pytest-mock = "~3.8.0"
pylint = "~2.13.0"
mypy = "0.971"
black = "22.8.0"
bandit = "~1.7.0"
isort = "~5.10.0"
vulture = "2.6"

[tool.poetry.scripts]
pipo = "pipo.__main__:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true

[tool.pylint]
max-line-length = 88
disable = [
    "C0330",
]

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'

[tool.isort]
profile = "black"
honor_noqa = true
length_sort = true
skip_gitignore = true

[tool.bandit]
target = ["pipo"]
exclude_dirs = ["tests", ".venv"]

[tool.vulture]
make_whitelist = true
min_confidence = 70
paths = ["pipo/"]
sort_by_size = true
