# This workflow will
# - build docker image with arm7 as target (as used by Raspberry Pi 4 Model B);
# - push image to a repository.
# For more information see:
# https://github.com/docker/setup-buildx-action
# https://github.com/marketplace/actions/build-and-push-docker-images

name: Build + Publish Docker Image

on:
  workflow_run:
    workflows: [ "Test Application" ]
    types:
      - completed
  pull_request:
    branches: [ "dev" ]
  push:
    tags: [ "v*.*.*" ]
    branches: [ "main" ]

jobs:
  docker:
    name: Build + Publish Docker Image
    runs-on: ubuntu-22.04
    env:
      REGISTRY: docker.io
      TARGET_PLATFORM: linux/arm/v7
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: latest

    - name: Set variables
      if: success()
      id: prepare
      shell: bash
      run: |
        echo image=${GITHUB_REPOSITORY@L} >> $GITHUB_OUTPUT
        echo platform=${TARGET_PLATFORM} >> $GITHUB_OUTPUT

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
          images: ${{ env.REGISTRY }}/${{ steps.prepare.outputs.image }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}

    - name: Login to Docker Hub registry
      uses: docker/login-action@v3
      if: github.ref == 'refs/heads/main' && github.event.workflow_run.conclusion == 'success'
      with:
        username: ${{ secrets.DOCKER_CI_USERNAME }}
        password: ${{ secrets.DOCKER_CI_ACCESS_TOKEN }}

    - name: Build/push Docker
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.ref == 'refs/heads/main' && github.event.workflow_run.conclusion == 'success' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: ${{ steps.prepare.outputs.platform }}
