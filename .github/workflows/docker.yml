# This workflow will
# - install Python dependencies, lint and run tests with a variety of Python versions;
# - build the docker image with arm7 as target (as used by Raspberry Pi 4 Model B);
# - push the image to a repository.
# For more information see:
# https://github.com/pguyot/arm-runner-action
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build/Publish Docker Image

on:
  push:
    branches: [ "main", "dev", "cicd" ]
  pull_request:
    branches: [ "main", "dev"]

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      DOCKER_REGISTRY: TODO
      DOCKER_IMAGE: andrecg95/Pipo-do-Arraial
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_TARGET_PLATFORM: linux/arm/v7
    steps:
    - uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      # Add support for more platforms with QEMU
      # https://github.com/docker/setup-qemu-action
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: latest
    - name: Set variables
      if: success()
      id: prepare
      run: |
        echo docker_platform=${DOCKER_TARGET_PLATFORM} >> $GITHUB_ENV
        echo docker_image=${DOCKER_REGISTRY}/${DOCKER_IMAGE} >> $GITHUB_ENV
        echo version=${GITHUB_RUN_NUMBER} >> $GITHUB_ENV
    - name: Docker Login
      if: success()
      run: |
        echo "${DOCKER_PASSWORD}" | docker login ${DOCKER_REGISTRY} --username "${DOCKER_USERNAME}" --password-stdin
    - name: Push image
      if: success()
      run: |
        docker buildx build \
        --platform ${{ steps.prepare.outputs.docker_platform }} \
        --tag ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }} \
        --file ./Dockerfile \
        --output type=image,push=true .
